import os
from telethon import TelegramClient, events, Button
from keep_alive import keep_alive

api_id = int(os.getenv("API_ID"))
api_hash = os.getenv("API_HASH")
session_path = "sessions/me.session"

if not os.path.exists("sessions"):
    os.mkdir("sessions")

client = TelegramClient(session_path, api_id, api_hash)

selected_chat = None

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞–º–∏
@client.on(events.NewMessage(pattern="/start"))
async def start(event):
    name = event.sender.first_name or "–¥—Ä—É–≥"
    buttons = [
        [Button.inline("üí¨ –í—ã–±—Ä–∞—Ç—å —á–∞—Ç", b"set_chat")],
        [Button.inline("‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", b"send_msg")],
        [Button.inline("‚ÑπÔ∏è –ü–æ–º–æ—â—å", b"help")]
    ]
    await event.reply(f"üëã –ü—Ä–∏–≤–µ—Ç, {name}!\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", buttons=buttons)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@client.on(events.CallbackQuery)
async def callback(event):
    global selected_chat
    data = event.data.decode("utf-8")

    if data == "set_chat":
        await event.edit("‚úèÔ∏è –í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É:\n/set <chat_id –∏–ª–∏ @username>")
    elif data == "send_msg":
        if not selected_chat:
            await event.edit("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —á–∞—Ç —á–µ—Ä–µ–∑ /set")
        else:
            await event.edit("‚úèÔ∏è –í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É:\n/send <—Ç–µ–∫—Å—Ç>")
    elif data == "help":
        await event.edit("üìå –ö–æ–º–∞–Ω–¥—ã:\n/set <chat_id –∏–ª–∏ @username>\n/send <—Ç–µ–∫—Å—Ç>\n/help")

# –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
@client.on(events.NewMessage)
async def handler(event):
    global selected_chat
    text = event.raw_text.strip()

    if text.startswith("/set "):
        selected_chat = text.split(" ", 1)[1].strip()
        await event.reply(f"‚úÖ –ß–∞—Ç {selected_chat} –≤—ã–±—Ä–∞–Ω!")
    elif text.startswith("/send "):
        if not selected_chat:
            await event.reply("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —á–∞—Ç —á–µ—Ä–µ–∑ /set")
            return
        message = text.split(" ", 1)[1].strip()
        try:
            await client.send_message(selected_chat, message)
            await event.reply(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {selected_chat}")
        except Exception as e:
            await event.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
    elif text == "/help":
        await event.reply("üìå –ö–æ–º–∞–Ω–¥—ã:\n/set <chat_id –∏–ª–∏ @username>\n/send <—Ç–µ–∫—Å—Ç>\n/help")

if __name__ == "__main__":
    keep_alive()
    client.start()
    client.run_until_disconnected()
