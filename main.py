import os
import random
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = os.getenv("Song")  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
ADMIN_ID = 6525179440       # –¢–≤–æ–π Telegram ID

# ===================== –î–ê–ù–ù–´–ï =====================
quotes = [f"üí¨ –¶–∏—Ç–∞—Ç–∞ #{i+1} ‚Äî –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ü–∏—Ç–∞—Ç—ã {i+1}" for i in range(100000)]
jokes = [
    "üòÇ –ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç–ª–∞—è ‚Äî –¥–ª—è —Å–ª–∞–±–∞–∫–æ–≤!",
    "üòÇ –ñ–∏–∑–Ω—å ‚Äî –∫–∞–∫ –∫–æ–¥: –∏–Ω–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏–Ω–æ–≥–¥–∞ –±–∞–≥–∏.",
    "üòÇ –£—á—ë–Ω—ã–µ –¥–æ–∫–∞–∑–∞–ª–∏: —Å–º–µ—Ö –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –∂–∏–∑–Ω—å, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞–¥ –±–∞–≥–∞–º–∏."
]

used_quotes = set()
used_jokes = set()
user_history = []

# ===================== –ö–õ–ê–í–ò–ê–¢–£–†–´ =====================
def main_menu(user_id=None):
    keyboard = [
        [InlineKeyboardButton("üí¨ –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞", callback_data="random_quote")],
        [InlineKeyboardButton("üòÇ –Æ–º–æ—Ä", callback_data="humor")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about")]
    ]
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω –º–µ–Ω—é –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
    if user_id == ADMIN_ID:
        keyboard.append([InlineKeyboardButton("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", callback_data="admin")])
    return InlineKeyboardMarkup(keyboard)

def back_menu(user_id=None):
    keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]]
    # –ê–¥–º–∏–Ω –∫–Ω–æ–ø–∫–∞
    if user_id == ADMIN_ID:
        keyboard.append([InlineKeyboardButton("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", callback_data="admin")])
    return InlineKeyboardMarkup(keyboard)

def quote_menu(user_id=None):
    keyboard = [
        [InlineKeyboardButton("üìå –ï—â—ë –æ–¥–Ω–∞ —Ü–∏—Ç–∞—Ç–∞", callback_data="random_quote")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]
    ]
    if user_id == ADMIN_ID:
        keyboard.append([InlineKeyboardButton("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", callback_data="admin")])
    return InlineKeyboardMarkup(keyboard)

def joke_menu(user_id=None):
    keyboard = [
        [InlineKeyboardButton("üòÇ –ï—â—ë –æ–¥–∏–Ω —é–º–æ—Ä", callback_data="humor")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]
    ]
    if user_id == ADMIN_ID:
        keyboard.append([InlineKeyboardButton("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", callback_data="admin")])
    return InlineKeyboardMarkup(keyboard)

# ===================== –ü–†–ò–í–ï–¢–°–¢–í–ò–ï =====================
def full_greeting(user_name: str) -> str:
    return (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ QuotesAuraBot ‚Äî —Ç–≤–æ–π –±–æ—Ç —Å —Ü–∏—Ç–∞—Ç–∞–º–∏ –∏ —é–º–æ—Ä–æ–º!\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
        "- /start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "- –í—ã–±–µ—Ä–∏ —Å–ª—É—á–∞–π–Ω—É—é —Ü–∏—Ç–∞—Ç—É –∏–ª–∏ —é–º–æ—Ä\n\n"
        "üéâ –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è!"
    )

# ===================== –§–£–ù–ö–¶–ò–ò =====================
def get_random_quote() -> str:
    global used_quotes
    available = list(set(quotes) - used_quotes)
    if not available:
        used_quotes.clear()
        available = list(quotes)
    quote = random.choice(available)
    used_quotes.add(quote)
    return quote

def get_random_joke() -> str:
    global used_jokes
    available = list(set(jokes) - used_jokes)
    if not available:
        used_jokes.clear()
        available = list(jokes)
    joke = random.choice(available)
    used_jokes.add(joke)
    return joke

def update_user_history(user):
    global user_history
    if user.username and user.username not in user_history:
        user_history.append(user.username)
        # –û–≥—Ä–∞–Ω–∏—á–∏–º –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
        if len(user_history) > 100:
            user_history = user_history[-100:]

# ===================== –ö–û–ú–ê–ù–î–´ =====================
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    update_user_history(user)
    markup = main_menu(user.id)
    await update.message.reply_text(full_greeting(user.first_name or "–¥—Ä—É–≥"), reply_markup=markup)

# ===================== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–ù–û–ü–û–ö =====================
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user = query.from_user
    update_user_history(user)
    await query.answer()
    
    if query.data == "random_quote":
        quote = get_random_quote()
        await query.edit_message_text(
            text=quote,
            reply_markup=quote_menu(user.id)
        )
    elif query.data == "humor":
        joke = get_random_joke()
        await query.edit_message_text(
            text=joke,
            reply_markup=joke_menu(user.id)
        )
    elif query.data == "about":
        text = (
            "‚ÑπÔ∏è *–û QuotesAuraBot*\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏ —é–º–æ—Ä.\n"
            "üí° –¶–∏—Ç–∞—Ç—ã –∏ —é–º–æ—Ä –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è, –ø–æ–∫–∞ –≤—Å–µ –Ω–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã.\n"
            "üéâ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"
        )
        await query.edit_message_text(text=text, parse_mode="Markdown", reply_markup=back_menu(user.id))
    elif query.data == "admin" and user.id == ADMIN_ID:
        stats = "\n".join(user_history[-10:]) if user_history else "–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        await query.edit_message_text(
            text=f"üõ† *–ú–µ–Ω—é –∞–¥–º–∏–Ω–∞*\n\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n{stats}",
            parse_mode="Markdown",
            reply_markup=back_menu(user.id)
        )
    elif query.data == "back":
        await query.edit_message_text(full_greeting(user.first_name or "–¥—Ä—É–≥"), reply_markup=main_menu(user.id))

# ===================== MAIN =====================
if __name__ == "__main__":
    PORT = int(os.environ.get("PORT", 10000))
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CallbackQueryHandler(button_handler))

    WEBHOOK_URL = f"https://songaura.onrender.com/{TOKEN}"
    print("QuotesAuraBot –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ webhook...")
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=WEBHOOK_URL
    )
