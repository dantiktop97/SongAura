import os
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# ===================== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ =====================
TOKEN = os.getenv("Song")  # –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
ADMIN_ID = 6525179440      # –¢–≤–æ–π Telegram ID

# ===================== –¶–∏—Ç–∞—Ç—ã =====================
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏—Ç–∞—Ç —Å –Ω–æ–º–µ—Ä–æ–º
quote_counter = 0

# ===================== –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ =====================
unique_users = []

# ===================== –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã =====================
def main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üí¨ –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞", callback_data="random_quote")],
        [InlineKeyboardButton("üòÇ –Æ–º–æ—Ä", callback_data="humor")],
        [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about")]
    ])

def back_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]
    ])

def quote_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìå –ï—â—ë –æ–¥–Ω–∞ —Ü–∏—Ç–∞—Ç–∞", callback_data="random_quote")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]
    ])

def admin_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="stats")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]
    ])

# ===================== –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ =====================
def full_greeting(user_name: str) -> str:
    return (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ QuotesAura ‚Äî –±–æ—Ç —Å —Ü–∏—Ç–∞—Ç–∞–º–∏ –∏ —é–º–æ—Ä–æ–º!\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
        "- /start ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "- –í—ã–±–µ—Ä–∏ —Å–ª—É—á–∞–π–Ω—É—é —Ü–∏—Ç–∞—Ç—É –∏–ª–∏ —é–º–æ—Ä\n\n"
        "üéâ –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è!"
    )

# ===================== –§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—á–∏ —Ü–∏—Ç–∞—Ç—ã =====================
def get_random_quote() -> str:
    global quote_counter
    quote_counter += 1
    return f"üí¨ –¶–∏—Ç–∞—Ç–∞ #{quote_counter} ‚Äî –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ü–∏—Ç–∞—Ç—ã {quote_counter}"

# ===================== –ö–æ–º–∞–Ω–¥—ã =====================
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    user_id = update.effective_user.id
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç
    if user_id not in [u['id'] for u in unique_users]:
        unique_users.append({'id': user_id, 'username': update.effective_user.username or user_name})
    # –§–æ—Ä–º–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = main_menu()
    if user_id == ADMIN_ID:
        keyboard.inline_keyboard.append([InlineKeyboardButton("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", callback_data="admin")])
    await update.message.reply_text(full_greeting(user_name), reply_markup=keyboard)

# ===================== –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ =====================
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    user_name = query.from_user.first_name or "–¥—Ä—É–≥"

    if query.data == "random_quote":
        quote = get_random_quote()
        await query.edit_message_text(
            text=quote,
            reply_markup=quote_menu()
        )
    elif query.data == "humor":
        joke = "üòÇ –ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç–ª–∞—è ‚Äî –¥–ª—è —Å–ª–∞–±–∞–∫–æ–≤!"
        await query.edit_message_text(
            text=joke,
            reply_markup=back_menu()
        )
    elif query.data == "about":
        text = (
            "‚ÑπÔ∏è *–û QuotesAuraBot*\n\n"
            "–ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –∏ —é–º–æ—Ä.\n"
            "üéâ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!"
        )
        await query.edit_message_text(text=text, parse_mode="Markdown", reply_markup=back_menu())
    elif query.data == "back":
        keyboard = main_menu()
        if user_id == ADMIN_ID:
            keyboard.inline_keyboard.append([InlineKeyboardButton("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", callback_data="admin")])
        await query.edit_message_text(full_greeting(user_name), reply_markup=keyboard)
    elif query.data == "admin" and user_id == ADMIN_ID:
        await query.edit_message_text("üõ† –ú–µ–Ω—é –∞–¥–º–∏–Ω–∞", reply_markup=admin_menu())
    elif query.data == "stats" and user_id == ADMIN_ID:
        last_users = unique_users[-10:]
        text = "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n"
        for u in last_users:
            text += f"@{u['username']}\n"
        await query.edit_message_text(text=text, reply_markup=admin_menu())
    else:
        await query.edit_message_text("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.", reply_markup=back_menu())

# ===================== MAIN =====================
if __name__ == "__main__":
    PORT = int(os.environ.get("PORT", 10000))
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CallbackQueryHandler(button_handler))

    WEBHOOK_URL = f"https://songaura.onrender.com/{TOKEN}"
    print("QuotesAuraBot –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ webhook...")
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=WEBHOOK_URL
    )
