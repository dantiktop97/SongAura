import os
import random
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# ===================== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è =====================
TOKEN = os.getenv("QuotesAuraBot")  # –°–µ–∫—Ä–µ—Ç Render

# –ü—Ä–∏–º–µ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ü–∏—Ç–∞—Ç
QUOTE_CATEGORIES = {
    "random": [
        "–¶–∏—Ç–∞—Ç–∞ 1",
        "–¶–∏—Ç–∞—Ç–∞ 2",
        "–¶–∏—Ç–∞—Ç–∞ 3"
    ],
    "humor": [
        "–Æ–º–æ—Ä 1",
        "–Æ–º–æ—Ä 2",
        "–Æ–º–æ—Ä 3"
    ]
}

# –û—á–µ—Ä–µ–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–∏—Ç–∞—Ç
user_queues = {}  # user_id -> category -> list
user_history = {}  # user_id -> list of last shown quotes

# ===================== –ö–Ω–æ–ø–∫–∏ =====================
def main_menu():
    keyboard = [
        [InlineKeyboardButton("üí¨ –°–ª—É—á–∞–π–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞", callback_data="random")],
        [InlineKeyboardButton("üòÇ –Æ–º–æ—Ä", callback_data="humor")]
    ]
    return InlineKeyboardMarkup(keyboard)

def back_menu():
    keyboard = [[InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]]
    return InlineKeyboardMarkup(keyboard)

def quote_menu(category):
    keyboard = [
        [InlineKeyboardButton("üîÅ –ï—â—ë –æ–¥–Ω–∞ —Ü–∏—Ç–∞—Ç–∞", callback_data=f"quote_{category}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back")]
    ]
    return InlineKeyboardMarkup(keyboard)

# ===================== –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ =====================
def full_greeting(user_name: str) -> str:
    return (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ QuotesAuraBot ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ü–∏—Ç–∞—Ç–∞–º!\n\n"
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ü–∏—Ç–∞—Ç—ã –∏ —é–º–æ—Ä.\n"
        "üìå –ö–æ–º–∞–Ω–¥—ã:\n"
        "- /start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "üéâ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è!"
    )

# ===================== –õ–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Ü–∏—Ç–∞—Ç—ã =====================
def get_unique_quote(user_id, category):
    if user_id not in user_queues:
        user_queues[user_id] = {}
    if category not in user_queues[user_id] or not user_queues[user_id][category]:
        # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –æ—á–µ—Ä–µ–¥—å –∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
        user_queues[user_id][category] = QUOTE_CATEGORIES[category].copy()
        random.shuffle(user_queues[user_id][category])
    quote = user_queues[user_id][category].pop(0)
    return quote

# ===================== –ö–æ–º–∞–Ω–¥—ã =====================
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    await update.message.reply_text(full_greeting(user_name), reply_markup=main_menu())

# ===================== –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ =====================
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_name = query.from_user.first_name or "–¥—Ä—É–≥"

    if query.data == "back":
        await query.edit_message_text(full_greeting(user_name), reply_markup=main_menu())
    elif query.data in QUOTE_CATEGORIES:
        quote = get_unique_quote(query.from_user.id, query.data)
        await query.edit_message_text(quote, reply_markup=quote_menu(query.data))
    elif query.data.startswith("quote_"):
        category = query.data.split("_", 1)[1]
        quote = get_unique_quote(query.from_user.id, category)
        await query.edit_message_text(quote, reply_markup=quote_menu(category))

# ===================== MAIN =====================
if __name__ == "__main__":
    PORT = int(os.environ.get("PORT", 10000))
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CallbackQueryHandler(button_handler))

    WEBHOOK_URL = f"https://yourdomain.com/{TOKEN}"  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à URL Render
    print("QuotesAuraBot –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ webhook...")
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        url_path=TOKEN,
        webhook_url=WEBHOOK_URL
    )
